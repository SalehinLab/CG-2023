import pygame
import numpy as np

# initialize pygame
pygame.init()

# set screen size
screen_size = (800, 600)
screen = pygame.display.set_mode(screen_size)

# set colors
white = (255, 255, 255)
black = (0, 0, 0)
blue = (0, 0, 255)
green = (0, 255, 0)
red = (255, 0, 0)

# set font
font = pygame.font.SysFont(None, 30)

# initialize control points
control_points = []


# define draw control points function
def draw_control_points():
    for point in control_points:
        pygame.draw.circle(screen, blue, point, 5)
        pygame.draw.circle(screen, black, point, 2)


# define draw Bezier curve function
def draw_cubic_bezier_curve():
    if len(control_points) == 4:
        # define Bezier curve points
        curve_points = []
        for t in np.arange(0, 1, 0.01):
            x = (1 - t) ** 3 * control_points[0][0] + 3 * (1 - t) ** 2 * t * control_points[1][0] + 3 * (
                        1 - t) * t ** 2 * control_points[2][0] + t ** 3 * control_points[3][0]
            y = (1 - t) ** 3 * control_points[0][1] + 3 * (1 - t) ** 2 * t * control_points[1][1] + 3 * (
                        1 - t) * t ** 2 * control_points[2][1] + t ** 3 * control_points[3][1]
            curve_points.append((x, y))

        # draw Bezier curve
        pygame.draw.lines(screen, green, False, curve_points, 2)


# define draw lines function
def draw_lines():
    if len(control_points) >= 2:
        for i in range(len(control_points) - 1):
            pygame.draw.line(screen, red, control_points[i], control_points[i + 1], 2)


# define main loop
def main_loop():
    while True:
        # fill screen with white color
        screen.fill(white)

        # draw control points
        draw_control_points()

        # draw Bezier curve
        draw_cubic_bezier_curve()

        # draw lines
        draw_lines()

        # draw instructions
        text = font.render('cubic bezier curve', True, black)
        screen.blit(text, (5, 5))

        # update display
        pygame.display.update()

        # handle events
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                return
            elif event.type == pygame.MOUSEBUTTONUP:
                # add control point
                control_points.append(event.pos)
            elif event.type == pygame.KEYDOWN and event.key == pygame.K_SPACE:
                # clear control points
                control_points.clear()


# run main loop
if __name__ == '__main__':
    main_loop()

